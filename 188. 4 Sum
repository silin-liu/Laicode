public class Solution {
  public boolean exist(int[] array, int target) {
    // Write your solution here
    Map<Integer, TwoSumPair> map = new HashMap<>();
    Arrays.sort(array);
    for(int i = 1; i < array.length; i++){
      for(int j = 0; j < i; j++){
        int sum = array[i] + array[j];
        if(!map.containsKey(sum)){
          map.put(sum, new TwoSumPair(j,i));
        }
      }
    }
    for(int i = 1; i < array.length; i++){
      for(int j = i-1; j >= 0; j--){
        int remain = target - array[i]-array[j];
        TwoSumPair pair = map.get(remain);
        if(pair != null && pair.right < j){
          return true;
        }
      }
    }
    return false;
  }
  class TwoSumPair{
    int left;
    int right;
    TwoSumPair(int left, int right){
      this.left = left;
      this.right = right;
    }
  }

}
//TC:O(N^2)SC::O(N^2)
