public class Solution {
  public List<String> subSets(String set) {
    // Write your solution here
    List<String> result = new ArrayList<>();
    if(set == null){
      return result;
    }
    char[] array = set.toCharArray();
    StringBuilder sb = new StringBuilder();
    Arrays.sort(array);
    helper(result, sb,  array, 0);
    return result;
  }
  private void helper(List<String> result, StringBuilder sb, char[] array, int index){
    if(index == array.length){
      result.add(sb.toString());
      return;
    }
    // 加
    sb.append(array[index]);
    helper(result, sb, array, index+1);
    sb.deleteCharAt(sb.length()-1);
    // 不加
    while(index+1< array.length && array[index+1] == array[index]){
      index ++;
    }
    helper(result,sb,array, index+1);
  }
}
//T O(k^n)
//S O(k)
